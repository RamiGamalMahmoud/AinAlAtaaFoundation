// <auto-generated />
using System;
using AinAlAtaaFoundation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AinAlAtaaFoundation.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240724023547_Set_BranchRepresentive_Branch_Nullable")]
    partial class Set_BranchRepresentive_Branch_Nullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("DistrictId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("district_id");

                    b.Property<int?>("FeaturedPointId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("featured_point_id");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("street");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("DistrictId")
                        .HasDatabaseName("ix_addresses_district_id");

                    b.HasIndex("FeaturedPointId")
                        .HasDatabaseName("ix_addresses_featured_point_id");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ClanId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clan_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_branches");

                    b.HasIndex("ClanId")
                        .HasDatabaseName("ix_branches_clan_id");

                    b.ToTable("branches", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.BranchRepresentative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("BranchId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_branch_representatives");

                    b.HasIndex("BranchId")
                        .HasDatabaseName("ix_branch_representatives_branch_id");

                    b.ToTable("branch_representatives", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Clan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_clans");

                    b.ToTable("clans", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "البو عباس"
                        },
                        new
                        {
                            Id = 2,
                            Name = "البو باز"
                        },
                        new
                        {
                            Id = 3,
                            Name = "البو أسود"
                        },
                        new
                        {
                            Id = 4,
                            Name = "البو نيسان"
                        },
                        new
                        {
                            Id = 5,
                            Name = "البو بدري"
                        },
                        new
                        {
                            Id = 6,
                            Name = "البو دراج"
                        },
                        new
                        {
                            Id = 7,
                            Name = "البو عيسى"
                        });
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_districts");

                    b.ToTable("districts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "الجزيرة/ الجزء الشمالي"
                        },
                        new
                        {
                            Id = 2,
                            Name = "الملحة"
                        },
                        new
                        {
                            Id = 3,
                            Name = "أبو تونية"
                        },
                        new
                        {
                            Id = 4,
                            Name = "الموالي"
                        },
                        new
                        {
                            Id = 5,
                            Name = "الأبيتر"
                        },
                        new
                        {
                            Id = 6,
                            Name = "الطريشة"
                        },
                        new
                        {
                            Id = 7,
                            Name = "تل الكورة"
                        },
                        new
                        {
                            Id = 8,
                            Name = "تل العورة"
                        },
                        new
                        {
                            Id = 9,
                            Name = "بنات الحسن"
                        },
                        new
                        {
                            Id = 10,
                            Name = "القادسية"
                        },
                        new
                        {
                            Id = 11,
                            Name = "حليحل وسالم"
                        },
                        new
                        {
                            Id = 12,
                            Name = "الضباعي"
                        },
                        new
                        {
                            Id = 13,
                            Name = "البلدية (القاطول)"
                        },
                        new
                        {
                            Id = 14,
                            Name = "المنظمة"
                        },
                        new
                        {
                            Id = 15,
                            Name = "البو رحمن"
                        },
                        new
                        {
                            Id = 16,
                            Name = "الصحن (الإمام)"
                        },
                        new
                        {
                            Id = 17,
                            Name = "المدرسة الأولى"
                        },
                        new
                        {
                            Id = 18,
                            Name = "الزراعة"
                        },
                        new
                        {
                            Id = 19,
                            Name = "الجيل الثائر"
                        },
                        new
                        {
                            Id = 20,
                            Name = "السكك"
                        },
                        new
                        {
                            Id = 21,
                            Name = "حي المعتصم"
                        },
                        new
                        {
                            Id = 22,
                            Name = "حي مدرسة المعتصم"
                        },
                        new
                        {
                            Id = 23,
                            Name = "حي المستشفى"
                        },
                        new
                        {
                            Id = 24,
                            Name = "حي الهادي"
                        },
                        new
                        {
                            Id = 25,
                            Name = "المتوكلية"
                        },
                        new
                        {
                            Id = 26,
                            Name = "معمل الأدوية"
                        },
                        new
                        {
                            Id = 27,
                            Name = "حي الضباط"
                        },
                        new
                        {
                            Id = 28,
                            Name = "حي العرموشية الأولى"
                        },
                        new
                        {
                            Id = 29,
                            Name = "حي القادسية"
                        },
                        new
                        {
                            Id = 30,
                            Name = "العرموشية الثانية"
                        },
                        new
                        {
                            Id = 31,
                            Name = "حي المعلمين"
                        },
                        new
                        {
                            Id = 32,
                            Name = "حي الجبيرية"
                        },
                        new
                        {
                            Id = 33,
                            Name = "حي الخضراء"
                        },
                        new
                        {
                            Id = 34,
                            Name = "حي الشهداء"
                        },
                        new
                        {
                            Id = 35,
                            Name = "حي الإفراز"
                        },
                        new
                        {
                            Id = 36,
                            Name = "حي المثنى"
                        },
                        new
                        {
                            Id = 37,
                            Name = "حي صلاح الدين"
                        },
                        new
                        {
                            Id = 38,
                            Name = "حي الشرطة"
                        },
                        new
                        {
                            Id = 39,
                            Name = "حي القلعة"
                        },
                        new
                        {
                            Id = 40,
                            Name = "حي الكهرومائية"
                        },
                        new
                        {
                            Id = 41,
                            Name = "حي دور السكك"
                        },
                        new
                        {
                            Id = 42,
                            Name = "حي الزهور"
                        },
                        new
                        {
                            Id = 43,
                            Name = "حي الصعيوية"
                        },
                        new
                        {
                            Id = 44,
                            Name = "حي الشيخ رياح"
                        },
                        new
                        {
                            Id = 45,
                            Name = "حي مكيشيفة"
                        });
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.DistrictRepresentative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("address_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<int>("DistrictId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("district_id");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_district_representatives");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasDatabaseName("ix_district_representatives_address_id");

                    b.HasIndex("DistrictId")
                        .HasDatabaseName("ix_district_representatives_district_id");

                    b.ToTable("district_representatives", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("address_id");

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("applicant_id");

                    b.Property<int?>("BranchId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("branch_id");

                    b.Property<int>("BranchRepresentativeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("branch_representative_id");

                    b.Property<int>("ClanId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clan_id");

                    b.Property<int>("DistrictRepresentativeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("district_representative_id");

                    b.Property<int>("FamilyTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("family_type_id");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasColumnName("notes");

                    b.Property<int?>("OrphanTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("orphan_type_id");

                    b.Property<string>("RationCard")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("ration_card");

                    b.Property<int>("SocialStatusId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("social_status_id");

                    b.HasKey("Id")
                        .HasName("pk_families");

                    b.HasIndex("AddressId")
                        .HasDatabaseName("ix_families_address_id");

                    b.HasIndex("ApplicantId")
                        .IsUnique()
                        .HasDatabaseName("ix_families_applicant_id");

                    b.HasIndex("BranchId")
                        .HasDatabaseName("ix_families_branch_id");

                    b.HasIndex("BranchRepresentativeId")
                        .HasDatabaseName("ix_families_branch_representative_id");

                    b.HasIndex("ClanId")
                        .HasDatabaseName("ix_families_clan_id");

                    b.HasIndex("DistrictRepresentativeId")
                        .HasDatabaseName("ix_families_district_representative_id");

                    b.HasIndex("FamilyTypeId")
                        .HasDatabaseName("ix_families_family_type_id");

                    b.HasIndex("OrphanTypeId")
                        .HasDatabaseName("ix_families_orphan_type_id");

                    b.HasIndex("RationCard")
                        .IsUnique()
                        .HasDatabaseName("ix_families_ration_card");

                    b.HasIndex("SocialStatusId")
                        .HasDatabaseName("ix_families_social_status_id");

                    b.ToTable("families", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("birth_date");

                    b.Property<int>("FamilyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("family_id");

                    b.Property<bool>("IsApplicant")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_applicant");

                    b.Property<bool>("IsOrphan")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_orphan");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_family_members");

                    b.HasIndex("FamilyId")
                        .HasDatabaseName("ix_family_members_family_id");

                    b.ToTable("family_members", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.FamilyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_family_types");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_family_types_name");

                    b.ToTable("family_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "عام"
                        },
                        new
                        {
                            Id = 2,
                            Name = "خاص"
                        });
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.FeaturedPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("DistrictId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("district_id");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_featured_points");

                    b.HasIndex("DistrictId")
                        .HasDatabaseName("ix_featured_points_district_id");

                    b.ToTable("featured_points", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.OrphanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_orphan_types");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_orphan_types_name");

                    b.ToTable("orphan_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "يتيم الأب"
                        },
                        new
                        {
                            Id = 2,
                            Name = "يتيم الأم"
                        },
                        new
                        {
                            Id = 3,
                            Name = "يتيم الأب و الأم"
                        });
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("family_id");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT")
                        .HasColumnName("number");

                    b.HasKey("Id")
                        .HasName("pk_phone");

                    b.HasIndex("FamilyId")
                        .HasDatabaseName("ix_phone_family_id");

                    b.ToTable("phone", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.SocialStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_social_statuses");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_social_statuses_name");

                    b.ToTable("social_statuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "أيتام"
                        },
                        new
                        {
                            Id = 2,
                            Name = "متعفف"
                        },
                        new
                        {
                            Id = 3,
                            Name = "أرامل"
                        },
                        new
                        {
                            Id = 4,
                            Name = "مطلقات"
                        },
                        new
                        {
                            Id = 5,
                            Name = "الزوج مفقود"
                        },
                        new
                        {
                            Id = 6,
                            Name = "أخرى"
                        });
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("is_admin");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("ix_users_user_name");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = true,
                            Password = "admin",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BranchRepresentativePhone", b =>
                {
                    b.Property<int>("BranchRepresentativeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("branch_representative_id");

                    b.Property<int>("PhonesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("phones_id");

                    b.HasKey("BranchRepresentativeId", "PhonesId")
                        .HasName("pk_branch_representative_phone");

                    b.HasIndex("PhonesId")
                        .HasDatabaseName("ix_branch_representative_phone_phones_id");

                    b.ToTable("branch_representative_phone", (string)null);
                });

            modelBuilder.Entity("DistrictRepresentativePhone", b =>
                {
                    b.Property<int>("DistrictRepresentativeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("district_representative_id");

                    b.Property<int>("PhonesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("phones_id");

                    b.HasKey("DistrictRepresentativeId", "PhonesId")
                        .HasName("pk_district_representative_phone");

                    b.HasIndex("PhonesId")
                        .HasDatabaseName("ix_district_representative_phone_phones_id");

                    b.ToTable("district_representative_phone", (string)null);
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Address", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_districts_district_id");

                    b.HasOne("AinAlAtaaFoundation.Models.FeaturedPoint", "FeaturedPoint")
                        .WithMany()
                        .HasForeignKey("FeaturedPointId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_addresses_featured_points_featured_point_id");

                    b.Navigation("District");

                    b.Navigation("FeaturedPoint");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Branch", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.Clan", "Clan")
                        .WithMany("Branches")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_branches_clans_clan_id");

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.BranchRepresentative", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.Branch", "Branch")
                        .WithMany("BranchRepresentatives")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_branch_representatives_branches_branch_id");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.DistrictRepresentative", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.Address", "Address")
                        .WithOne()
                        .HasForeignKey("AinAlAtaaFoundation.Models.DistrictRepresentative", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_district_representatives_addresses_address_id");

                    b.HasOne("AinAlAtaaFoundation.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_district_representatives_districts_district_id");

                    b.Navigation("Address");

                    b.Navigation("District");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Family", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_families_addresses_address_id");

                    b.HasOne("AinAlAtaaFoundation.Models.FamilyMember", "Applicant")
                        .WithOne()
                        .HasForeignKey("AinAlAtaaFoundation.Models.Family", "ApplicantId")
                        .HasConstraintName("fk_families_family_members_applicant_id");

                    b.HasOne("AinAlAtaaFoundation.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_families_branches_branch_id");

                    b.HasOne("AinAlAtaaFoundation.Models.BranchRepresentative", "BranchRepresentative")
                        .WithMany()
                        .HasForeignKey("BranchRepresentativeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_families_branch_representatives_branch_representative_id");

                    b.HasOne("AinAlAtaaFoundation.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_families_clans_clan_id");

                    b.HasOne("AinAlAtaaFoundation.Models.DistrictRepresentative", "DistrictRepresentative")
                        .WithMany()
                        .HasForeignKey("DistrictRepresentativeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_families_district_representatives_district_representative_id");

                    b.HasOne("AinAlAtaaFoundation.Models.FamilyType", "FamilyType")
                        .WithMany()
                        .HasForeignKey("FamilyTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_families_family_types_family_type_id");

                    b.HasOne("AinAlAtaaFoundation.Models.OrphanType", "OrphanType")
                        .WithMany()
                        .HasForeignKey("OrphanTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_families_orphan_types_orphan_type_id");

                    b.HasOne("AinAlAtaaFoundation.Models.SocialStatus", "SocialStatus")
                        .WithMany()
                        .HasForeignKey("SocialStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_families_social_statuses_social_status_id");

                    b.Navigation("Address");

                    b.Navigation("Applicant");

                    b.Navigation("Branch");

                    b.Navigation("BranchRepresentative");

                    b.Navigation("Clan");

                    b.Navigation("DistrictRepresentative");

                    b.Navigation("FamilyType");

                    b.Navigation("OrphanType");

                    b.Navigation("SocialStatus");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.FamilyMember", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.Family", "Family")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_family_members_families_family_id");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.FeaturedPoint", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_featured_points_districts_district_id");

                    b.Navigation("District");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Phone", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.Family", null)
                        .WithMany("Phones")
                        .HasForeignKey("FamilyId")
                        .HasConstraintName("fk_phone_families_family_id");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.User", b =>
                {
                    b.OwnsOne("AinAlAtaaFoundation.Models.DeletableModel", "DeletableModel", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("INTEGER")
                                .HasColumnName("id");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("TEXT")
                                .HasColumnName("deletable_model_deleted_at");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(false)
                                .HasColumnName("deletable_model_is_deleted");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId")
                                .HasConstraintName("fk_users_users_id");
                        });

                    b.Navigation("DeletableModel");
                });

            modelBuilder.Entity("BranchRepresentativePhone", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.BranchRepresentative", null)
                        .WithMany()
                        .HasForeignKey("BranchRepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_branch_representative_phone_branch_representatives_branch_representative_id");

                    b.HasOne("AinAlAtaaFoundation.Models.Phone", null)
                        .WithMany()
                        .HasForeignKey("PhonesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_branch_representative_phone_phone_phones_id");
                });

            modelBuilder.Entity("DistrictRepresentativePhone", b =>
                {
                    b.HasOne("AinAlAtaaFoundation.Models.DistrictRepresentative", null)
                        .WithMany()
                        .HasForeignKey("DistrictRepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_district_representative_phone_district_representatives_district_representative_id");

                    b.HasOne("AinAlAtaaFoundation.Models.Phone", null)
                        .WithMany()
                        .HasForeignKey("PhonesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_district_representative_phone_phone_phones_id");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Branch", b =>
                {
                    b.Navigation("BranchRepresentatives");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Clan", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("AinAlAtaaFoundation.Models.Family", b =>
                {
                    b.Navigation("FamilyMembers");

                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
