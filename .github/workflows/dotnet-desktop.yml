name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: AinAlAtaaFoundation.sln                        # Replace with your solution name, i.e. MyWpfApp.sln.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Get Version from Project File
      id: get-version
      shell: bash
      run: echo "version=$(grep -oE '<Version>[^<]+' MyApplication/MyApplication.csproj | sed 's/<Version>//')" >> $GITHUB_OUTPUT

    - name: Publish Application
      run: dotnet publish AinAlAtaaFoundation/AinAlAtaaFoundation.csproj -c Release -o publish -r win-x64 --self-contained true

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Create Velopack Release
      run: |
        dotnet tool install -g vpk
        vpk download github --repoUrl https://github.com/RamiGamalMahmoud/AinAlAtaaFoundation.git
        vpk pack -u AinAlAtaaFoundation -v ${{ steps.get-version.outputs.version }} -p publish
        vpk upload github --repoUrl https://github.com/RamiGamalMahmoud/AinAlAtaaFoundation.git --publish --releaseName "MyProject ${{ steps.get-version.outputs.version }}" --tag v${{ steps.get-version.outputs.version }} --token ${{ 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 }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
